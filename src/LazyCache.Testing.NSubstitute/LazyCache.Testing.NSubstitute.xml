<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LazyCache.Testing.NSubstitute</name>
    </assembly>
    <members>
        <member name="T:LazyCache.Testing.NSubstitute.Create">
            <summary>
                Factory for creating mocked instances.
            </summary>
        </member>
        <member name="M:LazyCache.Testing.NSubstitute.Create.MockedCachingService">
            <summary>
                Creates a mocked caching service.
            </summary>
            <returns>A mocked caching service.</returns>
        </member>
        <member name="T:LazyCache.Testing.NSubstitute.Extensions.MockExtensions">
            <summary>
                Extensions for mocks.
            </summary>
        </member>
        <member name="T:LazyCache.Testing.NSubstitute.NoSetUpHandler">
            <summary>
                Handler for methods that have not been set up on a lazy cache mock.
            </summary>
        </member>
        <member name="M:LazyCache.Testing.NSubstitute.NoSetUpHandler.#ctor(LazyCache.IAppCache)">
            <summary>
                Constructor.
            </summary>
            <param name="mockedCachingService">The mocked caching service.</param>
        </member>
        <member name="M:LazyCache.Testing.NSubstitute.NoSetUpHandler.Handle(NSubstitute.Core.ICall)">
            <summary>
                Checks the last method invocation on the mock;
                if Add was invoked the unexpected match is set up;
                if GetOrAdd or GetOrAddAsync was invoked the unexpected match is set up and the addItemFactory result will be
                returned;
                otherwise the default value for the specified type will be returned.
            </summary>
            <param name="call"></param>
            <returns>
                if GetOrAdd or GetOrAddAsync was invoked the unexpected match is set up and the addItemFactory result will be
                returned;
                otherwise the default value for the specified type will be returned if the last method invocation has a return
                type.
            </returns>
        </member>
    </members>
</doc>
